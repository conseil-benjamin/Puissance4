procédure showBoard
// affiche le tableau de jeux

paramètres:
i(Entréée): entier , permet d'afficher toute les lignes du tableau et prend comme paramètre l'axe x du tableau

résultat
pas de résultat 

procédure playerMove1
// permet de récupérer le choix de mouvement du 1er joueur et affiche le pion sur le tableau de jeux
player1(Entrée/Sortie) , variable définit pour identifier le 1er joueur
player2(Entrée/Sortie) , variable définit pour identifier le 2ème joueur 
paramètres:
nbRangee()
espaceRestant()

procédure playerMove2
// permet de récupérer le choix de mouvement du deuxième joueur et affiche le pion sur le tableau de jeux,
// et avec l'appellation de la fonction checkWinner on vérifie si le joueur à gagner ou non.

fonction checkWinner
// vérifie si un des joueurs à gagner ou non, si un des deux joueurs à gagner on retourne soit la variable winner 
// avec comme caractère soit 'X' ou 'O' en fonction de qui à gagner.

paramètres : 
espaceRestant // si espace restant == 0 alors on appelle la procédure finJeux.

résultat -> 
retourne variable winner avec soit 'X' ou 'O' comme valeur

fonction finJeux
//affiche message de fin de jeux et ensuite qui à gagner soit 'X' ou 'O'


PROGRAMME ----------------------------------- PSEUDO-CODE

constante caractère player1 := 'X';
constante caractère player2 := 'O';

debut
    entier board = tableau [7][6] de entier;
    nbRangee := entier; // correspond au choix de colonne du joueur    
    winner := caractère; 
    winner := ' ';  // si variable vide alors pas de gagnant
    espaceRestant := entier; 
    espaceRestant := 42;  // correspond au nombre de case de jeux restante vide

    écrireEcran("Bienvenue sur le jeu Puissance4 \nlesrègles sont simples le premier à aligner 4 pions à gagner !");

    tant que (espaceRestant != 0 OU winner == ' ') faire   // boucle de jeux avec la condition pour que le jeu continue à tourner
        showBoard();  // affiche le tableau de jeux 
        playerMove1(); // 
        playerMove2(); // ensuite 
    finfaire

fin

